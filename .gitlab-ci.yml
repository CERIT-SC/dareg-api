image: node:20-alpine

stages:
  - build
  # - publish
  # - review
  - staging
  - production
  - cleanup

variables:
  DOCKER_IMAGE_NAME: "$HARBOR_URL/ceitec-biodata/dareg-api"
  CLUSTER_DOMAIN: "dyn.cloud.e-infra.cz"
  DEPLOYMENT_TLD: dareg.${CLUSTER_DOMAIN}
  DEPLOYMENT_TLD_FIX: "dareg.biodata.ceitec.cz"
  K8S_AGENT_NAME: agent-dareg
  K8S_NAMESPACE: ceitec-dareg-ns

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $HUB_REGISTRY_USER -p $HARBOR_PASSWORD $HARBOR_URL
  script:
    - docker build --tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHORT_SHA --tag latest --tag $CI_COMMIT_REF_NAME -f $CI_PROJECT_DIR/Dockerfile .
    - docker push --all-tags $DOCKER_IMAGE_NAME

.deploy: &deploy
  image:
    name: zhangsean/kubectl
    entrypoint: ['']
  before_script:
    - kubectl config use-context $(kubectl config get-contexts -o=name | grep ${K8S_AGENT_NAME})
  script:
    - mkdir -p $CI_PROJECT_DIR/manifests/prepared/$APP_COMPONENT || true
    - cd $CI_PROJECT_DIR/manifests
    - for f in $APP_COMPONENT/*.yaml; do envsubst < $f > prepared/$f; done
    - ls -la prepared/$APP_COMPONENT || true
    - cat prepared/$APP_COMPONENT/*.yaml || true
    - kubectl apply -f prepared/$APP_COMPONENT --recursive -n ${K8S_NAMESPACE}
  artifacts:
    name: deployments-$CI_COMMIT_REF_SLUG
    paths:
      - $CI_PROJECT_DIR/manifests/prepared/$APP_COMPONENT
    expire_in: 1 week

# review:
#   <<: *deploy
#   stage: review
#   variables:
#     APP_COMPONENT: server
#     APP: dev
#     APP_HOST: api.$APP.${DEPLOYMENT_TLD}
#     APP_HOST_FIX: api.$APP.${DEPLOYMENT_TLD_FIX}
#   environment:
#     name: dev
#     url: https://api.dev.${DEPLOYMENT_TLD}
#     on_stop: stop-review
#   only:
#     - branches
#   except:
#     - master

staging:
  <<: *deploy
  stage: staging
  variables:
    APP_COMPONENT: server
    APP: staging
    APP_HOST: api.stage.${DEPLOYMENT_TLD}
    APP_HOST_FIX: api.stage.${DEPLOYMENT_TLD_FIX}
  environment:
    name: staging
    url: https://api.stage.${DEPLOYMENT_TLD_FIX}
  only:
    - master

production:
  <<: *deploy
  stage: production
  variables:
    APP_COMPONENT: server
    APP: production
    APP_HOST: "api.${DEPLOYMENT_TLD}"
    APP_HOST_FIX: api.${DEPLOYMENT_TLD_FIX}
  when: manual
  environment:
    name: production
    url: "https://api.${DEPLOYMENT_TLD_FIX}"
  only:
    - tags
  except:
    - branches

stop-review:
  <<: *deploy
  stage: cleanup
  script:
    - echo "All cluster resources within the namespace ${K8S_NAMESPACE} with label 'deployment-id=$APP' will be removed" || true
    - kubectl delete deployments,services,ingresses,configmaps,secrets -n ${K8S_NAMESPACE} -l deployment-id=$APP
  when: manual
  variables:
    APP: review-$CI_COMMIT_REF_SLUG
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  only:
    - branches
  except:
    - master
